<Window x:Class="TerminalMonitor.Windows.ConditionDetailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TerminalMonitor.Windows"
        xmlns:controls="clr-namespace:TerminalMonitor.Windows.Controls"
        xmlns:rules="clr-namespace:TerminalMonitor.Windows.ValidationRules"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:CommandDetailWindowDataContextVO}"
        Title="Condition Detail" SizeToContent="WidthAndHeight" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="GroupBox">
                <Setter Property="Margin" Value="3,2" />
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Margin" Value="3,4" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <RadioButton Name="rdBtnSingle" Grid.Row="0" Content="Use single field condtion" 
                     GroupName="condition" Checked="RdBtnCondition_Checked" />        
        <GroupBox Name="grpBxSingleField" Header="Single Field">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <controls:FieldConditionView x:Name="conditionView" Grid.Row="1" />
            </Grid>
        </GroupBox>

        <RadioButton Name="rdBtnMultiple" Content="Use multiple field condtion"
                     GroupName="condition" Checked="RdBtnCondition_Checked" />        
        <GroupBox Name="grpBxMultipleField" Header="Multiple Field">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Name="lblConditionName" Grid.Column="0" Content="Condition name (*)" />
                    <TextBox Name="txtBxConditionName" Grid.Column="1"
                             Style="{StaticResource textBoxInValidation}"
                             Validation.ErrorTemplate="{StaticResource validationTemplate}">
                        <TextBox.Text>
                            <Binding Path="ConditionName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <rules:NotEmptyRule ErrorMessage="Condition name is required" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>

                <TreeView Name="trConditions" MinHeight="50">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:ConditionGroupNodeVO}" ItemsSource="{Binding Conditions}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Name="mnItmAddConditionGroup" Header="Add group" Tag="{Binding}" Click="MuItmAddConditionGroup_Click" />
                                        <MenuItem Name="mnItmAddCondition" Header="Add field" Tag="{Binding}" Click="MnItmAddCondition_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <ComboBox ItemsSource="{StaticResource GroupMatchModes}" SelectedValue="{Binding MatchMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource MatchModeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox Content="Negative" IsChecked="{Binding NegativeMatch}" />
                                <CheckBox Content="Default" IsChecked="{Binding DefaultMatch}" />
                                <CheckBox Content="Dismiss" IsChecked="{Binding DismissMatch}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        
                        <DataTemplate DataType="{x:Type local:FieldConditionNodeVO}">
                            <StackPanel Orientation="Horizontal">
                                <Label Name="lblKey" Content="Key" />
                                <TextBox Name="txtBxKey" MinWidth="100" MaxWidth="200" Margin="0, 0, 10, 0" Text="{Binding FieldKey}" />

                                <ComboBox Name="cmbBxOperator" Width="100" Margin="0, 0, 10, 0"
                                          ItemsSource="{StaticResource TextMatchOperators}"
                                          SelectedValue="{Binding MatchOperator}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource MatchOperatorToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <Label Name="lblValue" Content="Value" />
                                <TextBox Name="txtBxValue" MinWidth="150" MaxWidth="300" Margin="0, 0, 10, 0" Text="{Binding TargetValue}" />

                                <CheckBox Margin="0, 0, 10, 0" Content="Negative Result" IsChecked="{Binding NegativeMatch}" />
                                <CheckBox Margin="0, 0, 10, 0" Content="Match by Default" IsChecked="{Binding DefaultMatch}" />
                                <CheckBox Margin="0, 0, 10, 0" Content="Dismissed" IsChecked="{Binding DismissMatch}" />
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </StackPanel>
        </GroupBox>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Name="btnSave" Grid.Column="1" Content="Save" Click="BtnSave_Click" />
        </Grid>
    </StackPanel>
</Window>
