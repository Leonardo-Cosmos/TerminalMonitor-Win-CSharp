<UserControl x:Class="TerminalMonitor.Windows.Controls.ConditionListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TerminalMonitor.Windows.Controls"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=local:ConditionListViewDataContextVO}"
             d:DesignHeight="150" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <x:Array x:Key="designConditions" Type="{x:Type local:ConditionItemVO}">
                <local:ConditionItemVO FieldKey="key" MatchOperator="Equals" TargetValue="value0" IsInverted="False" DefaultResult="False" IsDisabled="False" />
                <local:ConditionItemVO FieldKey="key" MatchOperator="Contains" TargetValue="value1" IsInverted="True" DefaultResult="True" IsDisabled="True" />
            </x:Array>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Name="stkPnlCondition" Grid.Row="0" Grid.Column="0" Orientation="Horizontal">

            <ComboBox Margin="10, 0, 10, 0"  ItemsSource="{StaticResource GroupMatchModes}" SelectedValue="{Binding MatchMode}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource MatchModeToStringConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <CheckBox Name="chkBxNegative" Margin="2, 0" IsChecked="{Binding IsInverted}"
                      Style="{StaticResource checkBoxInvert}" d:Style="{StaticResource checkBoxInvertDesign}" />
            <CheckBox Name="chkBxDefault" Margin="2, 0" IsChecked="{Binding DefaultResult}"
                      Style="{StaticResource checkBoxDefault}" d:Style="{StaticResource checkBoxDefaultDesign}" />
            <CheckBox Name="chkBxDismiss" Margin="2, 0" IsChecked="{Binding IsDisabled}"
                      Style="{StaticResource checkBoxDismiss}" d:Style="{StaticResource checkBoxDismissDesign}" />

        </StackPanel>
        
        <ListView Name="lstConditions" Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3" MinHeight="20"
                  SelectionChanged="LstConditions_SelectionChanged"
                  MouseDown="LstConditions_MouseDown" MouseDoubleClick="LstConditions_MouseDoubleClick"
                  d:ItemsSource="{StaticResource designConditions}">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edit" Icon="✏" Command="{Binding Path=EditCommand}" />
                    <MenuItem Header="Toggle Inverted" Command="{Binding Path=ToggleInvertedCommnad}">
                        <MenuItem.Icon>
                            <Grid Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="⛔" Foreground="Red" FontSize="8" TextAlignment="Center"
                                           Width="14" Height="14" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                                <TextBlock Text="🛑" Foreground="Green" FontSize="8" TextAlignment="Center"
                                           Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Top" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Toggle Default Result" Command="{Binding Path=ToggleDefaultResultCommnad}">
                        <MenuItem.Icon>
                            <Grid Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="★" Foreground="Gold" FontSize="16" TextAlignment="Center"
                                           Width="18" Height="18" Margin="4,-2,0,2" />
                                <TextBlock Text="☆" Foreground="Orange" FontSize="16" TextAlignment="Center"
                                           Width="18" Height="18" Margin="0,-6,4,6" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Toggle Disabled" Command="{Binding Path=ToggleDisabledCommnad}">
                        <MenuItem.Icon>
                            <Grid Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Text="⏸" Foreground="Red" FontSize="10" TextAlignment="Center"
                                           Width="16" Height="16" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                                <TextBlock Text="⏺" Foreground="Green" FontSize="10" TextAlignment="Center"
                                           Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Top" />
                            </Grid>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Cut" Icon="✂" Command="{Binding Path=CutCommand}" />
                    <MenuItem Header="Copy" Icon="📄" Command="{Binding Path=CopyCommand}" />
                    <MenuItem Header="Paste" Icon="📋" Command="{Binding Path=PasteCommnad}" />
                    <Separator />
                    <MenuItem Header="Add" Icon="➕" Command="{Binding Path=AddCommand}" />
                    <MenuItem Header="Remove" Icon="➖" Command="{Binding Path=RemoveCommand}" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel></WrapPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <ResourceDictionary>
                                    <Style x:Key="textWhenName" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ConditionName, Converter={StaticResource ObjectNullOrEmptyConverter}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style x:Key="textWhenNoName" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ConditionName, Converter={StaticResource ObjectNullOrEmptyConverter}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ResourceDictionary>
                            </StackPanel.Resources>
                            <TextBlock Text="{Binding ConditionName}" Margin="3" Style="{StaticResource textWhenName}" />
                            <TextBlock Text="{Binding FieldKey}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Text="{Binding MatchOperator, Converter={StaticResource MatchOperatorToStringConverter}}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Text="{Binding TargetValue}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Margin="3" Style="{StaticResource textBlockInvert}" />
                            <TextBlock Margin="3,-3,3,-3" Style="{StaticResource textBlockDefault}" />
                            <TextBlock Margin="3" Style="{StaticResource textBlockDismiss}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid Name="grdButton" Grid.Row="2" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Name="btnAdd" Grid.Column="0" Width="24" Content="➕" ToolTip="Add" Command="{Binding Path=AddCommand}"
                    Style="{StaticResource buttonIcon}" />
            <Button Name="btnRemove" Grid.Column="1" Width="24" Content="➖" ToolTip="Remove" Command="{Binding Path=RemoveCommand}"
                    Style="{StaticResource buttonIcon}" />
            <Button Name="btnEdit" Grid.Column="2" Width="24" Content="✏" ToolTip="Edit" Command="{Binding Path=EditCommand}"
                    Style="{StaticResource buttonIcon}" />
            <Button Name="btnMoveLeft" Grid.Column="3" Width="24" Content="←" ToolTip="Move Left" Command="{Binding Path=MoveLeftCommand}"
                    Style="{StaticResource buttonIcon}" />
            <Button Name="btnMoveRight" Grid.Column="4" Width="24" Content="→" ToolTip="Move Right" Command="{Binding Path=MoveRightCommand}"
                    Style="{StaticResource buttonIcon}" />
        </Grid>
    </Grid>
</UserControl>
