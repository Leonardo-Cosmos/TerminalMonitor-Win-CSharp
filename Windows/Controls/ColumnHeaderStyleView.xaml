<UserControl x:Class="TerminalMonitor.Windows.Controls.ColumnHeaderStyleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TerminalMonitor.Windows.Controls"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=local:ColumnHeaderStyleViewDataContextVO}"
             d:DesignHeight="150" d:DesignWidth="600">
    <WrapPanel Name="pnl" Orientation="Horizontal">
        <WrapPanel.Resources>
            <ResourceDictionary>
                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="Label">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="Rectangle">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="4, 0, 0, 0" />
                </Style>
                <Style TargetType="WrapPanel">
                    <Setter Property="Margin" Value="0, 4, 0, 4" />
                </Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Margin" Value="4, 0, 8, 0" />
                </Style>
            </ResourceDictionary>
        </WrapPanel.Resources>

        <GroupBox Header="Color">
            <WrapPanel Name="wrpPnlColor" Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="chkBxForeground" IsChecked="{Binding EnableForeground}"/>
                    <Label Name="lblForeground" Content="Foreground" IsEnabled="{Binding EnableForeground}" />
                    <Rectangle Name="rctForegroundColor" Width="10" Height="10"
                               Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                               Fill="{Binding ForegroundColor}" MouseDown="RctForegroundColor_MouseDown">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle" BasedOn="{StaticResource {x:Type Rectangle}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsForegroundColorStatic}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="chkBxBackground" IsChecked="{Binding EnableBackground}" />
                    <Label Name="lblBackground" Content="Background" IsEnabled="{Binding EnableBackground}" />
                    <Rectangle Name="rctBackgroundColor" Width="10" Height="10"
                               Stroke="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                               Fill="{Binding BackgroundColor}" MouseDown="RctBackgroundColor_MouseDown">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle" BasedOn="{StaticResource {x:Type Rectangle}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBackgroundColorStatic}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </StackPanel>
            </WrapPanel>
        </GroupBox>

        <GroupBox Header="Alignment">
            <WrapPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="chkBoHorizontalAlignment" IsChecked="{Binding EnableHorizontalAlignment}" />
                    <Label Name="lblHorizontalAlignment" Content="Horizontal alignment" IsEnabled="{Binding EnableHorizontalAlignment}" />
                    <ComboBox Name="cmbBxHorizontalAlignment" IsEnabled="{Binding EnableHorizontalAlignment}"
                              ItemsSource="{StaticResource HorizontalAlignmentValues}" SelectedValue="{Binding HorizontalAlignment}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource HorizontalAlignmentToStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <CheckBox Name="chkBoTextAlignment" IsChecked="{Binding EnableTextAlignment}" />
                    <Label Name="lblTextAlignment" Content="Text alignment" IsEnabled="{Binding EnableTextAlignment}" />
                    <ComboBox Name="cmbBxTextAlignment" IsEnabled="{Binding EnableTextAlignment}"
                              ItemsSource="{StaticResource TextAlignmentValues}" SelectedValue="{Binding TextAlignment}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource TextAlignmentToStringConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </WrapPanel>
        </GroupBox>
    </WrapPanel>
</UserControl>
