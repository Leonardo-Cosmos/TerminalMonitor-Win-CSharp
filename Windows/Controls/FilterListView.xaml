<UserControl x:Class="TerminalMonitor.Windows.Controls.FilterListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TerminalMonitor.Windows.Controls"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=local:FilterListViewDataContextVO}"
             d:DesignHeight="150" d:DesignWidth="800">
    <UserControl.CommandBindings>
        <CommandBinding x:Name="cmdNew" Command="ApplicationCommands.New" CanExecute="CmdNew_CanExecute" Executed="CmdNew_Executed" />
        <CommandBinding x:Name="cmdDelete" Command="ApplicationCommands.Delete" CanExecute="CmdDelete_CanExecute" Executed="CmdDelete_Executed" />
        <CommandBinding x:Name="cmdOpen" Command="ApplicationCommands.Open" CanExecute="CmdOpen_CanExecute" Executed="CmdOpen_Executed" />
        <CommandBinding x:Name="cmdCopy" Command="ApplicationCommands.Copy" CanExecute="CmdCopy_CanExecute" Executed="CmdCopy_Executed" />
        <CommandBinding x:Name="cmdPaste" Command="ApplicationCommands.Paste" CanExecute="CmdPaste_CanExecute" Executed="CmdPaste_Executed" />
    </UserControl.CommandBindings>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <Style x:Key="checkBoxInvert" TargetType="CheckBox">
                    <Setter Property="ToolTip" Value="Invert match result" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInverted}" Value="False">
                            <Setter Property="Content" Value="🛑" />
                            <Setter Property="Foreground" Value="Green" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInverted}" Value="True">
                            <Setter Property="Content" Value="⛔" />
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="checkBoxDefault" TargetType="CheckBox">
                    <Setter Property="ToolTip" Value="Match by Default" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DefaultResult}" Value="False">
                            <Setter Property="Content" Value="☆" />
                            <Setter Property="Foreground" Value="Orange" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DefaultResult}" Value="True">
                            <Setter Property="Content" Value="★" />
                            <Setter Property="Foreground" Value="Gold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="checkBoxDismiss" TargetType="CheckBox">
                    <Setter Property="ToolTip" Value="Dismiss this condition in match" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDisabled}" Value="False">
                            <Setter Property="Content" Value="⏺" />
                            <Setter Property="Foreground" Value="Green" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDisabled}" Value="True">
                            <Setter Property="Content" Value="⏸" />
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="textInvert" TargetType="TextBlock">
                    <Setter Property="ToolTip" Value="Invert match result" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInverted}" Value="False">
                            <Setter Property="Text" Value="🛑" />
                            <Setter Property="Foreground" Value="Green" />
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInverted}" Value="True">
                            <Setter Property="Text" Value="⛔" />
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="textDefault" TargetType="TextBlock">
                    <Setter Property="ToolTip" Value="Match by Default" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DefaultResult}" Value="False">
                            <Setter Property="Text" Value="☆" />
                            <Setter Property="Foreground" Value="Orange" />
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DefaultResult}" Value="True">
                            <Setter Property="Text" Value="★" />
                            <Setter Property="Foreground" Value="Gold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="textDismiss" TargetType="TextBlock">
                    <Setter Property="ToolTip" Value="Dismiss this condition in match" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDisabled}" Value="False">
                            <Setter Property="Text" Value="⏺" />
                            <Setter Property="Foreground" Value="Green" />
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDisabled}" Value="True">
                            <Setter Property="Text" Value="⏸" />
                            <Setter Property="Foreground" Value="Red" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ResourceDictionary>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Name="stkPnlCondition" Grid.Row="0" Grid.Column="0" Orientation="Horizontal">

            <ComboBox Margin="10, 0, 10, 0"  ItemsSource="{StaticResource GroupMatchModes}" SelectedValue="{Binding MatchMode}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource MatchModeToStringConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <CheckBox Name="chkBxNegative" Margin="2, 0" Style="{StaticResource checkBoxInvert}" IsChecked="{Binding IsInverted}" />
            <CheckBox Name="chkBxDefault" Margin="2, 0" Style="{StaticResource checkBoxDefault}" IsChecked="{Binding DefaultResult}" />
            <CheckBox Name="chkBxDismiss" Margin="2, 0" Style="{StaticResource checkBoxDismiss}" IsChecked="{Binding IsDisabled}" />

        </StackPanel>
        
        <ListView Name="lstFilters" Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3" MinHeight="20"
                  SelectionChanged="LstFilters_SelectionChanged"
                  MouseDown="LstFilters_MouseDown" MouseDoubleClick="LstFilters_MouseDoubleClick">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Open" />
                    <Separator />
                    <MenuItem Command="ApplicationCommands.Copy" />
                    <MenuItem Command="ApplicationCommands.Paste" />
                    <Separator />
                    <MenuItem Command="ApplicationCommands.New" />
                    <MenuItem Command="ApplicationCommands.Delete" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel></WrapPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="SkyBlue" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <ResourceDictionary>
                                    <Style x:Key="textWhenName" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ConditionName, Converter={StaticResource ObjectNullOrEmptyConverter}}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style x:Key="textWhenNoName" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ConditionName, Converter={StaticResource ObjectNullOrEmptyConverter}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ResourceDictionary>
                            </StackPanel.Resources>
                            <TextBlock Text="{Binding ConditionName}" Margin="3" Style="{StaticResource textWhenName}" />
                            <TextBlock Text="{Binding FieldKey}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Text="{Binding MatchOperator, Converter={StaticResource MatchOperatorToStringConverter}}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Text="{Binding TargetValue}" Margin="3" Style="{StaticResource textWhenNoName}" />
                            <TextBlock Margin="3" Style="{StaticResource textInvert}" />
                            <TextBlock Margin="3" Style="{StaticResource textDefault}" />
                            <TextBlock Margin="3" Style="{StaticResource textDismiss}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid Name="grdButton" Grid.Row="2" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Name="btnAdd" Grid.Column="0" Width="20" Content="➕" ToolTip="Add" Command="ApplicationCommands.New" />
            <Button Name="btnRemove" Grid.Column="1" Width="20" Content="➖" ToolTip="Remove" Command="ApplicationCommands.Delete" />
            <Button Name="btnEdit" Grid.Column="2" Width="20" Content="✏" ToolTip="Edit" Command="ApplicationCommands.Open" />
            <Button Name="btnMoveLeft" Grid.Column="3" Width="20" Content="←" ToolTip="Move Left"
                    IsEnabled="{Binding IsAnySelected}" Click="BtnMoveLeft_Click" />
            <Button Name="btnMoveRight" Grid.Column="4" Width="20" Content="→" ToolTip="Move Right"
                    IsEnabled="{Binding IsAnySelected}" Click="BtnMoveRight_Click" />
        </Grid>
    </Grid>
</UserControl>
